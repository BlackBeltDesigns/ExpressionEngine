/*
	_fx.less
	----------
	part for commonly used CSS "effects"
	----------
		.shadow (box-shadow)
		.txt-shadow (txt-shadow)
		.boxsize (box-sizing)
		.corners (border-radius)
		.grade (linear-gradient)
		.diagonal (linear-gradient, specifically for creating a repeating diagonal background)
		.fadend (linear-gradient, specifically for creating faded out ends on borders and separations)
		.ts (transition)
		.tf (transform)
*/

// box shadows. (use sparingly)
// @args = h-shadow v-shadow blur spread color inset
// .shadow(0 0 0 0 rgba(0,0,0,0) inset);
.shadow(@args){
	-moz-box-shadow: @args;
	-webkit-box-shadow: @args;
	box-shadow: @args;
}

// text shadows. (use sparingly)
// @args = h-shadow v-shadow blur color
// .txt-shadow(0 0 0 rgba(0,0,0,0));
.txt-shadow(@args){ text-shadow: @args; }

// box sizing
// ==========
// when using percentages to size "boxes" horizontally,
// this makes "boxes" with borders, margin and
// padding stay true to assigned percentile widths.
.boxsize(@type: border-box){
	-moz-box-sizing: @type;
	-webkit-box-sizing: @type;
	box-sizing: @type;
}

// border radius. (rounded corners)
// top-left, top-right, bottom-right, bottom-left
.corners(@radius: 5px){
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
	border-radius: @radius;
}

// gradients. (use sparingly)
.grade(@start, @stop, @direction: top){
	background-color: @start;
	background-image: -moz-linear-gradient(@direction, @start, @stop);
	background-image: -webkit-linear-gradient(@direction, @start, @stop);
	background-image: linear-gradient(@direction, @start, @stop);
}

// diagonal lines bg. (use very sparingly)
.diagonal(@first, @second, @size: 30px 30px, @direction: left bottom){
	background-color: @first;
	background-image: -moz-linear-gradient(@direction, @first 0%, @first 25%, @second 25%, @second 50%, @first 50%, @first 75%, @second 75%);
	background-image: -webkit-linear-gradient(@direction, @first 0%, @first 25%, @second 25%, @second 50%, @first 50%, @first 75%, @second 75%);
	background-image: linear-gradient(@direction, @first 0%, @first 25%, @second 25%, @second 50%, @first 50%, @first 75%, @second 75%);
	background-size: @size;
}

// faded out ends. (use very sparingly)
.fadend(@first, @second, @direction: left bottom){
	background-color: @first;
	background-image: -moz-linear-gradient(@direction, @first 0%, @second 50%, @first 100%);
	background-image: -webkit-linear-gradient(@direction, @first 0%, @second 50%, @first 100%);
	background-image: linear-gradient(@direction, @first 0%, @second 50%, @first 100%);
}

// transitions. (use sparingly)
.ts(@prop: all, @time: 1s, @ease: linear){
	-moz-transition: @prop @time @ease;
	-webkit-transition: @prop @time @ease;
	transition: @prop @time @ease;
}

// transforms. (use sparingly)
// @args = any valid transform value
// e.g. .tf(rotate(10deg));
.tf(@args){
	-moz-transform: @args;
	-webkit-transform: @args;
	transform: @args;
}